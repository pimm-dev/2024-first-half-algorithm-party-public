<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="17" short-name="array-rotation-n-query" url="https://polygon.codeforces.com/p70RLpA/jh01533/array-rotation-n-query">
    <names>
        <name language="korean" value="수열 회전과 쿼리"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/korean/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/.html/korean/problem.html" type="text/html"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>2000</time-limit>
            <memory-limit>1073741824</memory-limit>
            <test-count>61</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test method="manual" sample="true"/>
                <test cmd="RandomGenerator 200000 200000 1000000000 1 1 1 1" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 100 1 1 1 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 1000000000 1 1 1 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 100 1 1 1 1" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 1000000000 1 1 1 2" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 100 1 1 1 2" method="generated"/>
                <test cmd="RandomGenerator 100 200000 1000000000 1 1 1 2" method="generated"/>
                <test cmd="RandomGenerator 100 200000 100 1 1 1 2" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 1000000000 1 1 1 3" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 100 1 1 1 3" method="generated"/>
                <test cmd="RandomGenerator 100 200000 1000000000 1 1 1 3" method="generated"/>
                <test cmd="RandomGenerator 100 200000 100 1 1 1 3" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 1000000000 1 1 1 4" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 100 1 1 1 4" method="generated"/>
                <test cmd="RandomGenerator 100 200000 1000000000 1 1 1 4" method="generated"/>
                <test cmd="RandomGenerator 100 200000 100 1 1 1 4" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 1000000000 1 1 1 5" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 100 1 1 1 5" method="generated"/>
                <test cmd="RandomGenerator 100 200000 1000000000 1 1 1 5" method="generated"/>
                <test cmd="RandomGenerator 100 200000 100 1 1 1 5" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 1000000000 0 0 1 1" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 100 0 0 1 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 1000000000 0 0 1 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 100 0 0 1 1" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 1000000000 1 1 0 1" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 100 1 1 0 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 1000000000 1 1 0 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 100 1 1 0 1" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 1000000000 1 0 0 1" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 100 1 0 0 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 1000000000 1 0 0 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 100 1 0 0 1" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 1000000000 0 1 0 1" method="generated"/>
                <test cmd="RandomGenerator 200000 200000 100 0 1 0 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 1000000000 0 1 0 1" method="generated"/>
                <test cmd="RandomGenerator 100 200000 100 0 1 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 1000000000 1 1 1 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 100 1 1 1 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 1000000000 1 1 1 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 100 1 1 1 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 1000000000 0 0 1 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 100 0 0 1 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 1000000000 0 0 1 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 100 0 0 1 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 1000000000 1 1 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 100 1 1 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 1000000000 1 1 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 100 1 1 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 1000000000 1 0 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 100 1 0 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 1000000000 1 0 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 100 1 0 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 1000000000 0 1 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 200000 200000 100 0 1 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 1000000000 0 1 0 1" method="generated"/>
                <test cmd="SameA_iGenerator 100 200000 100 0 1 0 1" method="generated"/>
                <test cmd="MaxAnsGenerator 1 1 1" method="generated"/>
                <test cmd="MaxAnsGenerator 0 0 1" method="generated"/>
                <test cmd="MaxAnsGenerator 1 1 0" method="generated"/>
                <test method="manual"/>
            </tests>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
            <file path="files/tutorial.tex"/>
        </resources>
        <executables>
            <executable>
                <source path="files/MaxAnsGenerator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/RandomGenerator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/SameA_iGenerator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/Validator.cpp" type="cpp.g++17"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::lcmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/Validator.cpp" type="cpp.g++17"/>
                <testset>
                    <test-count>1</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests>
                        <test verdict="valid"/>
                    </tests>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="accepted">
                <source path="solutions/0do_ac.py" type="python.pypy3"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/kiwiyou-ac.rs" type="rust"/>
            </solution>
            <solution tag="time-limit-exceeded">
                <source path="solutions/kiwiyou-tle-slow-sum-py.py" type="python.pypy3"/>
            </solution>
            <solution tag="time-limit-exceeded">
                <source path="solutions/kiwiyou-tle-slow-sum.rs" type="rust"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/ksoosung77_solution.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="main">
                <source path="solutions/main_solution.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/mz_I_sol.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/tony9402_ac.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/tony9402_ac2.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/vk_AC_cpp.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/vk_AC_py.py" type="python.pypy3"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/vk_AC_splay_cpp.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="time-limit-exceeded">
                <source path="solutions/vk_TLE_ver1_cpp.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="wrong-answer">
                <source path="solutions/vk_WA_ver1_py.py" type="python.pypy3"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>1</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list>
            <stress index="1" path="stresses/001"/>
        </list>
    </stresses>
    <tags>
        <tag value="prefix sum"/>
    </tags>
</problem>
