<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="30" short-name="powerful-morning" url="https://polygon.codeforces.com/p8VUb90/rootachieve/powerful-morning">
    <names>
        <name language="korean" value="힘세고 강한 아침"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/korean/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/.html/korean/problem.html" type="text/html"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>2000</time-limit>
            <memory-limit>268435456</memory-limit>
            <test-count>56</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test cmd="main_generator 10 90 200000" method="generated"/>
                <test cmd="main_generator 19 342 200000" method="generated"/>
                <test cmd="main_generator 28 756 200000" method="generated"/>
                <test cmd="main_generator 37 1332 200000" method="generated"/>
                <test cmd="main_generator 46 2070 200000" method="generated"/>
                <test cmd="main_generator 55 2970 200000" method="generated"/>
                <test cmd="main_generator 64 4032 200000" method="generated"/>
                <test cmd="main_generator 73 5256 200000" method="generated"/>
                <test cmd="main_generator 82 6642 200000" method="generated"/>
                <test cmd="main_generator 91 8190 200000" method="generated"/>
                <test cmd="main_generator 100 9900 200000" method="generated"/>
                <test cmd="main_generator 10 45 200000" method="generated"/>
                <test cmd="main_generator 19 171 200000" method="generated"/>
                <test cmd="main_generator 28 378 200000" method="generated"/>
                <test cmd="main_generator 37 666 200000" method="generated"/>
                <test cmd="main_generator 46 1035 200000" method="generated"/>
                <test cmd="main_generator 55 1485 200000" method="generated"/>
                <test cmd="main_generator 64 2016 200000" method="generated"/>
                <test cmd="main_generator 73 2628 200000" method="generated"/>
                <test cmd="main_generator 82 3321 200000" method="generated"/>
                <test cmd="main_generator 91 4095 200000" method="generated"/>
                <test cmd="main_generator 100 4950 200000" method="generated"/>
                <test cmd="main_generator 10 10 200000" method="generated"/>
                <test cmd="main_generator 19 19 200000" method="generated"/>
                <test cmd="main_generator 28 28 200000" method="generated"/>
                <test cmd="main_generator 37 37 200000" method="generated"/>
                <test cmd="main_generator 46 46 200000" method="generated"/>
                <test cmd="main_generator 55 55 200000" method="generated"/>
                <test cmd="main_generator 64 64 200000" method="generated"/>
                <test cmd="main_generator 73 73 200000" method="generated"/>
                <test cmd="main_generator 82 82 200000" method="generated"/>
                <test cmd="main_generator 91 91 200000" method="generated"/>
                <test cmd="main_generator 100 100 200000" method="generated"/>
                <test cmd="dij_generator 100 1" method="generated"/>
                <test cmd="dij_generator 100 2" method="generated"/>
                <test cmd="dij_generator 100 3" method="generated"/>
                <test cmd="dij_generator 100 4" method="generated"/>
                <test cmd="max_generator" method="generated"/>
                <test cmd="spfa_generator" method="generated"/>
                <test method="manual" sample="true"/>
                <test method="manual" sample="true"/>
                <test cmd="onemain_generator 100 9900 200000" method="generated"/>
                <test cmd="onemain_generator 100 4950 200000" method="generated"/>
                <test cmd="onemain_generator 100 100 200000" method="generated"/>
                <test cmd="all_one_or_max_generator 100 9900 200000 1" method="generated"/>
                <test cmd="all_one_or_max_generator 100 4950 200000 1" method="generated"/>
                <test cmd="all_one_or_max_generator 100 100 200000 1" method="generated"/>
                <test cmd="all_one_or_max_generator 100 9900 200000 2" method="generated"/>
                <test cmd="all_one_or_max_generator 100 4950 200000 2" method="generated"/>
                <test cmd="all_one_or_max_generator 100 100 200000 2" method="generated"/>
                <test cmd="even_odd_generator 100 9900 200000 2" method="generated"/>
                <test cmd="even_odd_generator 100 4950 200000 2" method="generated"/>
                <test cmd="even_odd_generator 100 100 200000 2" method="generated"/>
                <test cmd="even_odd_generator 100 9900 200000 9999" method="generated"/>
                <test cmd="even_odd_generator 100 4950 200000 9999" method="generated"/>
                <test cmd="even_odd_generator 100 100 200000 9999" method="generated"/>
            </tests>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
        </resources>
        <executables>
            <executable>
                <source path="files/all_one_or_max_generator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/dij_generator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/even_odd_generator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/main_generator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/max_generator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/onemain_generator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/spfa_generator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/validator.cpp" type="cpp.g++17"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::lcmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/validator.cpp" type="cpp.g++17"/>
                <testset>
                    <test-count>0</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests/>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="accepted">
                <source path="solutions/kiwiyou-full-dijk.rs" type="rust"/>
            </solution>
            <solution tag="time-limit-exceeded">
                <source path="solutions/kiwiyou-pq.rs" type="rust"/>
            </solution>
            <solution tag="wrong-answer">
                <source path="solutions/kiwiyou-wa-noskip.rs" type="rust"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/ksoosung77_solution.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="main">
                <source path="solutions/main_solution.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/mz_J_sol.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/mz_J_sol2.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/tony9402_ac.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="time-limit-exceeded-or-accepted">
                <source path="solutions/tony9402_ac_pypy.py" type="python.pypy3"/>
            </solution>
            <solution tag="time-limit-exceeded-or-accepted">
                <source path="solutions/tony9402_py_ac.py" type="python.3"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/vk_AC_cpp.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="time-limit-exceeded-or-accepted">
                <source path="solutions/vk_AC_py.py" type="python.pypy3"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>2</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list>
            <stress index="2" path="stresses/002"/>
            <stress index="1" path="stresses/001"/>
        </list>
    </stresses>
</problem>
