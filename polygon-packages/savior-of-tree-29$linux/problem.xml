<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="29" short-name="savior-of-tree" url="https://polygon.codeforces.com/p0lMWT6/j0dO/savior-of-tree">
    <names>
        <name language="english" value="Savior of Tree"/>
        <name language="korean" value="산림의 수호자"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/english/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/korean/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/.html/english/problem.html" type="text/html"/>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/.html/korean/problem.html" type="text/html"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>1000</time-limit>
            <memory-limit>1048576000</memory-limit>
            <test-count>45</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test description="예제 입력 1" method="manual" sample="true"/>
                <test description="예제 입력 2" method="manual" sample="true"/>
                <test description="예제 입력 3" method="manual" sample="true"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
                <test cmd="sot-gen 99996 0" method="generated"/>
                <test cmd="sot-gen 99997 17" method="generated"/>
                <test cmd="sot-gen 99998 316" method="generated"/>
                <test cmd="sot-gen 99999 5623" method="generated"/>
                <test cmd="sot-gen 100000 100000" method="generated"/>
                <test cmd="linear-tree-gen 100000 2 99994" method="generated"/>
                <test cmd="linear-tree-gen 99998 2 6" method="generated"/>
                <test cmd="linear-tree-gen 99999 33333 66666" method="generated"/>
                <test cmd="linear-tree-gen 100000 -1 -1" method="generated"/>
                <test cmd="star-tree-gen 99997 17" method="generated"/>
                <test cmd="star-tree-gen 99998 316" method="generated"/>
                <test cmd="star-tree-gen 99999 5623" method="generated"/>
                <test cmd="star-tree-gen 100000 99999" method="generated"/>
                <test cmd="larva-tree-gen 100000 3 99998" method="generated"/>
                <test cmd="larva-tree-gen 99998 99996 99993" method="generated"/>
                <test cmd="larva-tree-gen 99999 33333 66666" method="generated"/>
                <test cmd="larva-tree-gen 100000 -1 -1" method="generated"/>
                <test cmd="binary-tree-gen 99999 1 99998" method="generated"/>
                <test cmd="binary-tree-gen 99998 99997 1" method="generated"/>
                <test cmd="binary-tree-gen 100000 65536 99999" method="generated"/>
                <test cmd="binary-tree-gen 100000 -1 -1" method="generated"/>
                <test cmd="sot-gen 99998 75" method="generated"/>
                <test cmd="sot-gen 99998 1334" method="generated"/>
            </tests>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
            <file path="files/tutorial.tex"/>
        </resources>
        <executables>
            <executable>
                <source path="files/binary-tree-gen.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/gen-rooted-tree-graph.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/larva-tree-gen.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/linear-tree-gen.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/sot-gen.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/sot-val.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/star-tree-gen.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/undirected-tree-validator.cpp" type="cpp.g++17"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::hcmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>3</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests>
                    <test verdict="ok"/>
                    <test verdict="wrong-answer"/>
                    <test verdict="crashed"/>
                </tests>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/sot-val.cpp" type="cpp.g++17"/>
                <testset>
                    <test-count>10</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests>
                        <test verdict="valid"/>
                        <test verdict="valid"/>
                        <test verdict="invalid"/>
                        <test verdict="invalid"/>
                        <test verdict="invalid"/>
                        <test verdict="invalid"/>
                        <test verdict="invalid"/>
                        <test verdict="invalid"/>
                        <test verdict="invalid"/>
                        <test verdict="invalid"/>
                    </tests>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="accepted">
                <source path="solutions/kiwiyou_ac.rs" type="rust"/>
            </solution>
            <solution tag="time-limit-exceeded">
                <source path="solutions/kiwiyou_tle_leaf.rs" type="rust"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/ksoosung77_solution.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="rejected">
                <source path="solutions/ksoosung77_wa.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/mz_A_sol.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="main">
                <source path="solutions/sol-savior-of-tree.py" type="python.pypy3-64"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/tony9402_ac.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/vk_AC_cpp.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="wrong-answer">
                <source path="solutions/vk_WA_ver1_py.py" type="python.pypy3-64"/>
            </solution>
            <solution tag="wrong-answer">
                <source path="solutions/vk_WA_ver2_py.py" type="python.pypy3-64"/>
            </solution>
            <solution tag="wrong-answer">
                <source path="solutions/vk_WA_ver3_py.py" type="python.pypy3-64"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>2</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list>
            <stress index="2" path="stresses/002"/>
            <stress index="1" path="stresses/001"/>
        </list>
    </stresses>
</problem>
